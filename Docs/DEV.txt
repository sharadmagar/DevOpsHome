#!/bin/sh
curl -L https://us-west-2-aws-training.s3.amazonaws.com/awsu-spl/spl03-working-elb/static/bootstrap-elb.sh|sh


https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html


24/02
------------------Python Django Application------------------
s3sampleapplicationec2
collabris3applicationsample



1.Crate S3 Bucket
  collabris3applicationsample (to be changed)
2.Crete Iam role
   Role Name: s3sampleapplicationec2
           s3sampleapplicationec2
           
3. Create Ubuntu 16.04 machine with userdata.sh script
   sudo apt-get update -y
   sudo apt-get upgrade -y
   sudo apt-get install -y python-pip python-dev build-essential
   pip install --upgrade pip
    sudo pip install django==1.11 requests boto3 django-bootstrap3 pillow
    django-admin.py startproject s3pythonapp
    
4. Add security group with Port 22,80

5. Do SSH
   scp -i "key path" source floder ubuntu@ip:/home/ubuntu/s3pythonapp
   Copy s3pythonapp to /home/ubuntu/s3pythonapp
it
    Changes in settings.py
      1. change S3 Bucket Name
      2. Change ELB DNS Name
      3. ALLOWED_HOSTS = ["*"]

        91 : Chnage S3 bucket name
        30 : ALLOWED_HOSTS = ["*"]
        45 : Change ELB DNS Name
      
      
    cd /etc/systemd/system/
    sudo systemctl start django.service
    sudo systemctl enable django.service
           
6. Create AMI - s3ApplicationAMI


7. Create Autoscaling Group
     LC - s3ec2sampleapp
          Role Name s3sampleapplicationec2
     Select Security group- s3app+
     .
     
     AG Name: s3ec2group
     Give all the subnets in the region
     Receive Traffic from one or more Load Balancer
     Target Group- Ec2S3Group
     Configure Auto Scaling Policies
       Increase Group Size
         CPU utilization >= 60% (uncheck send notification)
       Decrease Group Size
               
3. Create Ubuntu 16.04 machine with userdata.sh script
   sudo apt-get update -y
   sudo apt-get upgrade -y
   sudo apt-get install -y python-pip python-dev build-essential
   pip install --upgrade pip
    sudo pip install django==1.11 requests boto3 django-bootstrap3 pillow
    
    cd /opt
    
 sudo git clone https://github.com/maheshkharwadkar/Django-Application.git
    
4. Add security group with Port 22,80

5. Do SSH
   scp -i "key path" source floder ubuntu@ip:/home/ubuntu/s3pythonapp
   rm -rf /home/ubuntu/s3pythonapp
   cp -r /opt/Django-Application/s3pythonapp/ /home/ubuntu
   Copy s3pythonapp to /home/ubuntu/s3pythonapp

    Changes in settings.py
      1. change S3 Bucket Name
      2. Change ELB DNS Name
      3. ALLOWED_HOSTS = ["*"]

        91 : Chnage S3 bucket name
        30 : ALLOWED_HOSTS = ["*"]
        45 : Change ELB DNS Name
      
      
    cd /etc/systemd/system/
    sudo systemctl start django.service
    sudo systemctl enable django.service
           
6. Create AMI - s3ApplicationAMI


7. Create Autoscaling Group
     LC - s3ec2sampleapp
          Role Name s3sampleapplicationec2
     Select Security group- s3app
     AG Name: s3ec2group
     Give all the subnets in the region
     Receive Traffic from one or more Load Balancer
    h Target Group- Ec2S3Group
     Configure Auto Scaling Policies
       Increase Group Size
         CPU utilization >= 60% (uncheck send notification)
       Decrease Group Size
         <=30%

ELB: SampleEc2S3LoadBalancer
Security Group: s3app
Targer Group: EC2S3Group
Timeout: 10 sec










]t